{"version":3,"file":"static/js/166.6f34c38f.chunk.js","mappings":"4TAEMA,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRC,IAAAA,IAAA,UAClBH,EADkB,oCACkBC,IAFV,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBC,EAAa,mCAAG,WAAMC,GAAN,uFACJJ,IAAAA,IAAA,UAAaH,EAAb,iBAA8BO,EAA9B,oBAA4CN,IADxC,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKbG,EAAY,mCAAG,WAAMD,GAAN,uFACJJ,IAAAA,IAAA,UACjBH,EADiB,iBACAO,EADA,4BACsBN,IAFlB,cACpBQ,EADoB,yBAInBA,EAAQJ,MAJW,2CAAH,sDAOZK,EAAe,mCAAG,WAAMH,GAAN,uFACPJ,IAAAA,IAAA,UACjBH,EADiB,iBACAO,EADA,4BACsBN,IAFf,cACvBQ,EADuB,yBAItBA,EAAQJ,MAJc,2CAAH,sDAOfM,EAAe,mCAAG,WAAMC,GAAN,uFACPT,IAAAA,IAAA,UACjBH,EADiB,gCACeC,EADf,kBACgCW,IAFzB,cACvBH,EADuB,yBAItBA,EAAQJ,MAJc,2CAAH,uD,+FC7BfQ,EAAOC,EAAAA,GAAAA,GAAH,gHAQJC,EAAYD,EAAAA,GAAAA,IAAH,6CAITE,EAAeF,EAAAA,GAAAA,IAAH,0D,6ECXV,SAASG,IACtB,MCA2B,WAC3B,IAAQC,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEwBjB,EAAAA,EAAAA,IAAaU,GAFrC,OAEUG,EAFV,OAGIC,EAASD,GAHb,gDAKIG,EAAS,KAAME,SALnB,0DADc,uBAAC,WAAD,wBASdC,KACC,CAACT,IAEG,CAAEG,MAAAA,EAAOE,MAAAA,GDjBSK,GAAjBP,EAAR,EAAQA,MAAOE,EAAf,EAAeA,MAEf,OACE,SAACR,EAAD,UACoB,IAAjBM,EAAMQ,SAAiBN,IACtB,wBACGF,EAAMS,KAAKC,KAAI,gBAAGxB,EAAH,EAAGA,GAAIyB,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,KAAhC,OACd,UAACrB,EAAD,YACE,SAACG,EAAD,CACEmB,IACEH,EAAY,yCAC0BA,GAClC,oFAENI,IAAKF,KAEP,4BACE,uBAAIA,KACJ,uCAAeD,GAAa,kBAXrB1B","sources":["services/movies-api.js","views/Cast/Cast.styled.js","views/Cast/Cast.jsx","hooks/useFetchCasts.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '0f5c4a68ea4f6f8af4c4fd53fcc81027';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMoviesById = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const respons = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return respons.data;\n};\n\nexport const getMovieReviews = async id => {\n  const respons = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return respons.data;\n};\n\nexport const getMovieByQuery = async query => {\n  const respons = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return respons.data;\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  :not(:last-child) {\n    margin-bottom: 10px;\n    gap: 25px;\n  }\n`;\n\nexport const Container = styled.div`\n  margin-top: 25px;\n`;\n\nexport const ProfileImage = styled.img`\n  width: 100px;\n  height: auto;\n`;\n","import { Item, Container, ProfileImage } from './Cast.styled';\nimport { useFetchCasts } from 'hooks/useFetchCasts';\n\nexport default function Cast() {\n  const { casts, error } = useFetchCasts();\n\n  return (\n    <Container>\n      {casts.length !== 0 && !error && (\n        <ul>\n          {casts.cast.map(({ id, profile_path, character, name }) => (\n            <Item key={id}>\n              <ProfileImage\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                    : 'https://www.diabetes.ie/wp-content/uploads/2017/02/no-image-available-250x417.png'\n                }\n                alt={name}\n              />\n              <div>\n                <p>{name}</p>\n                <p>Character: {character || 'Unknown'}</p>\n              </div>\n            </Item>\n          ))}\n        </ul>\n      )}\n    </Container>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../services/movies-api';\n\nexport const useFetchCasts = () => {\n  const { itemId } = useParams();\n  const [casts, setCasts] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchCasts() {\n      try {\n        const casts = await getMovieCast(itemId);\n        setCasts(casts);\n      } catch (error) {\n        setError(error.message);\n      }\n    }\n    fetchCasts();\n  }, [itemId]);\n\n  return { casts, error };\n};\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","response","data","getMoviesById","id","getMovieCast","respons","getMovieReviews","getMovieByQuery","query","Item","styled","Container","ProfileImage","Cast","itemId","useParams","useState","casts","setCasts","error","setError","useEffect","message","fetchCasts","useFetchCasts","length","cast","map","profile_path","character","name","src","alt"],"sourceRoot":""}