{"version":3,"file":"static/js/283.f20e67c7.chunk.js","mappings":"4TAEMA,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRC,IAAAA,IAAA,UAClBH,EADkB,oCACkBC,IAFV,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBC,EAAa,mCAAG,WAAMC,GAAN,uFACJJ,IAAAA,IAAA,UAAaH,EAAb,iBAA8BO,EAA9B,oBAA4CN,IADxC,cACrBG,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKbG,EAAY,mCAAG,WAAMD,GAAN,uFACJJ,IAAAA,IAAA,UACjBH,EADiB,iBACAO,EADA,4BACsBN,IAFlB,cACpBQ,EADoB,yBAInBA,EAAQJ,MAJW,2CAAH,sDAOZK,EAAe,mCAAG,WAAMH,GAAN,uFACPJ,IAAAA,IAAA,UACjBH,EADiB,iBACAO,EADA,4BACsBN,IAFf,cACvBQ,EADuB,yBAItBA,EAAQJ,MAJc,2CAAH,sDAOfM,EAAe,mCAAG,WAAMC,GAAN,uFACPT,IAAAA,IAAA,UACjBH,EADiB,gCACeC,EADf,kBACgCW,IAFzB,cACvBH,EADuB,yBAItBA,EAAQJ,MAJc,2CAAH,uD,iFC7BfQ,E,QAAOC,GAAAA,EAAH,8C,6ECCF,SAASC,IACtB,MCA4B,WAC5B,IAAQC,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE0Bb,EAAAA,EAAAA,IAAgBM,GAF1C,OAEUG,EAFV,OAGIC,EAAWD,GAHf,gDAKIG,EAAS,EAAD,IALZ,0DADc,uBAAC,WAAD,wBASdE,KACC,CAACR,IAEG,CAAEG,QAAAA,EAASE,MAAAA,GDjBSI,GAAnBN,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,MAEjB,OACE,yBACsB,IAAnBF,EAAQO,SAAiBL,IACxB,wBACGF,EAAQQ,QAAQC,KAAI,gBAAGrB,EAAH,EAAGA,GAAIsB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACnB,2BACE,UAACjB,EAAD,sBAAegB,MACf,uBAAIC,MAFGvB","sources":["services/movies-api.js","views/Reviews/Reviews.styled.js","views/Reviews/Reviews.jsx","hooks/useFetcReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '0f5c4a68ea4f6f8af4c4fd53fcc81027';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMoviesById = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const respons = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return respons.data;\n};\n\nexport const getMovieReviews = async id => {\n  const respons = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return respons.data;\n};\n\nexport const getMovieByQuery = async query => {\n  const respons = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return respons.data;\n};\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  font-weight: bold;\n`;\n","import { Text } from './Reviews.styled';\nimport { useFetcReviews } from 'hooks/useFetcReviews';\n\nexport default function Reviews() {\n  const { reviews, error } = useFetcReviews();\n\n  return (\n    <div>\n      {reviews.length !== 0 && !error && (\n        <ul>\n          {reviews.results.map(({ id, author, content }) => (\n            <li key={id}>\n              <Text>Author: {author}</Text>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../services/movies-api';\n\nexport const useFetcReviews = () => {\n  const { itemId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchCasts() {\n      try {\n        const reviews = await getMovieReviews(itemId);\n        setReviews(reviews);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    fetchCasts();\n  }, [itemId]);\n\n  return { reviews, error };\n};\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","response","data","getMoviesById","id","getMovieCast","respons","getMovieReviews","getMovieByQuery","query","Text","styled","Reviews","itemId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchCasts","useFetcReviews","length","results","map","author","content"],"sourceRoot":""}